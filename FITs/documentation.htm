<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">

 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-IN style='tab-interval:36.0pt'>

<div class=WordSection1>

<h1 style='margin-top:5.0pt;margin-right:25.75pt;margin-bottom:5.0pt;
margin-left:25.75pt;mso-para-margin-top:5.0pt;mso-para-margin-right:2.34gd;
mso-para-margin-bottom:5.0pt;mso-para-margin-left:2.34gd'><span
style='mso-fareast-font-family:"Times New Roman";color:white;mso-color-alt:
windowtext;mso-no-proof:yes'><img width=1200 height=250 id="_x0000_i1025"
src=FITs.jpg alt=Logo></span><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h1>



<p class=MsoNormal style='mso-margin-top-alt:auto;margin-right:170.15pt;
mso-margin-bottom-alt:auto;margin-left:72.0pt;mso-margin-top-alt:auto;
mso-para-margin-right:14.18gd;mso-margin-bottom-alt:auto;mso-para-margin-left:
72.0pt'><b><span lang=EN style='font-size:14.0pt;font-family:"Arial",sans-serif;
mso-ansi-language:EN'> <a href="index.htm"> Home<o:p></o:p> </a> <a href="contact.htm">Contact</a> <a href="FAQ.htm"> FAQ </a>  <o:p></o:p></span></b></p>



<p class=MsoNormal style='mso-margin-top-alt:auto;margin-right:170.15pt;
mso-margin-bottom-alt:auto;margin-left:72.0pt;mso-margin-top-alt:auto;
mso-para-margin-right:14.18gd;mso-margin-bottom-alt:auto;mso-para-margin-left:
72.0pt'><b><span lang=EN style='font-size:14.0pt;font-family:"Arial",sans-serif;
mso-ansi-language:EN'> Jump to <a href="./documentation.htm#matlab"> Matlab_code_help <o:p></o:p> </a> <a href="./documentation.htm#python">Python_code_help</a> </b></p>


<p class=MsoNormal style='margin-left:72.0pt'><b> <a href="manual.pdf"> Download manual in pdf </a></b></p>

<p class=MsoNormal style='margin-left:72.0pt'><b> <a href="http://reggen.iiitd.edu.in:1207/FITS/imputed_finaldata/finalDataSets_final/other/"> Other codes : using UniPath and chromatin interaction prediction after application of FITs </a></b></p>


<p class=MsoNormal style='margin-left:72.0pt'><b><span ><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:72.0pt'><b><span lang=EN
style='font-size:14.0pt;line-height:115%'>Using standalone executable for Linux<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:72.0pt'><b><span lang=EN
style='font-size:14.0pt;line-height:115%'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >After downloading
the file <span class=GramE>FITS.tar.gz <span
class=SpellE>gunzip</span></span> and <span class=SpellE>untar</span> the file
as such</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$ <span
class=SpellE>gunzip</span> FITS.tar.gz </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$ tar -<span
class=SpellE>xvf</span> FITS.tar</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Now include the
FITS folder in your PATH </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$ export PATH=<span
class=SpellE>path_of_FITS_<span class=GramE>folder</span></span><span
class=GramE>:$</span>PATH</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Now you can access
commands of FITS from any folder. </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >For execution you
have to pass filename of read-counts csv as <span class=GramE>a</span> input
file. Read-count csv file does not contain header and genomic location i.e. it <span
class=GramE>consist</span> of only data on which imputation is going to
perform. Row represents sites and column represent samples/cells in csv file.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >To get final
imputed matrix, you run two phases1 of FITs using command</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$ <span
class=GramE>run_FITSPhase1.sh input</span>=unimputed.csv output=imputed.csv</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >It is not necessary
to use any option, however for faster <span class=SpellE>executation</span> you
could use option</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span class=SpellE>maxLevel= 2 </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span class=SpellE><span >maxLevel</span></span><span
lang=EN> can be between 2 to 6 but not less than 2, such as </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$ <span
class=GramE>run_FITSPhase1.sh input</span>=unimputed.csv <span class=SpellE>maxLevel</span>=2
output=imputed.csv</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >run phase1 of FITS
many times, as such</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$ <span
class=GramE>run_FITSPhase1.sh input</span>=unimputed.csv output=imputed.csv</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$<span class=GramE>run_FITSPhase1.sh input</span>=unimputed.csv  output=imputed.csv</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$<span class=GramE>run_FITSPhase1.sh  input</span>=unimputed.csv  output=imputed.csv</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >....</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$<span class=GramE>run_FITSPhase1.sh  input</span>=unimputed.csv  output=imputed.csv</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >after executing
Phase-1 many times, run the phase-2 of FITs</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$<span class=GramE>run_FITSPhase2.sh  input</span>=unimputed.csv  output=imputed.csv</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><b><span >For large
read-count matrices<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >For imputing large
read-count matrices without <span class=SpellE>comsuming</span> too much memory
on computer use FITSPhase1L and FITSPhase2L</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Such that you run
FITSPhase1L many times ( more than 5 times) before you finally call FITSPhase2L</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$ <span
class=GramE>run_FITSPhase1L.sh input</span>=unimputed.csv  output=imputed.csv<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$<span class=GramE>run_FITSPhase1L.sh input</span>=unimputed.csv output=imputed.csv<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$<span class=GramE>run_FITSPhase1L.sh input</span>=unimputed.csv output=imputed.csv<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >……………………..<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >run_FITSPhase1L.sh  input=unimputed.csv  output=imputed.csv</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Then run
FITSPhase2L in same folder</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$ run_FITSPhase1L.sh  input =unimputed.csv  output=imputed.csv</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><b><span lang=EN
style='font-size:14.0pt;line-height:115%'>Using <a id="matlab"> Matlab
source code </span></b></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >&quot;# FITS <span
class=SpellE>Matlab</span> version&quot; </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >You have to
download <span class=SpellE>matlab</span> code in your local machine/server.
For execution you have to pass filename of read-counts csv as <span
class=GramE>a</span> input file. Read-count csv file does not contain header and
genomic location i.e. it <span class=GramE>consist</span> of only data on which
imputation is going to perform. Row represents sites and column represent
samples/cells in csv file.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Start  matlab and </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span class=SpellE><span >Addpath</span></span><span
lang=EN> of FITs using the command</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >&gt;<span
class=SpellE>addpath</span>(path_of_FITs_folder) ;</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Now run phase1 of
FITs on  matlab console</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >&gt; FITSPhase1
input='&lt;csv file name&gt;'</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >e.g.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >&gt; FITSPhase1
input='sce5_raw.csv'</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >'sce5_raw.csv'
consist of <span class=SpellE>epignome</span> data corresponding to five cell
type.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Other optional
input parameter you can pass in phase1 </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >&gt;FITSPhase1
input='&lt;csv file name&gt;' output='&lt;name to save imputed file&gt;' <span
class=SpellE>maxLevel</span> =&lt;Depth <span class=SpellE>upto</span> which
tree will grow&gt;</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >By <span
class=GramE>default</span> <span class=SpellE>maxLevel</span> set to 4 and
output set to '<span class=SpellE>FITSOutput</span>'.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >You can run
FITSPhase1 <span class=SpellE>parallely</span> in background using </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span class=SpellE><span >nohup</span></span><span
lang=EN> <span class=SpellE>matlab</span> -<span class=SpellE>nodisplay</span>
-<span class=SpellE>nosplash</span> -r &quot;try FITSPhase1 input='&lt;csv file
name&gt;'; catch; end; quit&quot; &gt; &lt;name&gt;.txt &amp;</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >```</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >You can create n
number of imputed <span class=GramE>matrix</span> generated through phase1.
Each run will generate imputed matrix.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Once Phase1 is over
then run Phase2 to generate final imputed matrix based on matrix received as
output from Phase1. You can run Phase2 on <span class=SpellE>matlab</span> console</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >&gt; FITSPhase2
input='&lt;csv file name&gt;'</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >e.g.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >&gt; FITSPhase2
input='sce5_raw.csv'</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >You have to pass
same input file as you passed in Phase1. Don't worry Phase2 takes only one
minute to generate final output :)</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Other optional
input parameter you can pass in phase2 </span></p>

<p class=MsoListParagraph style='margin-left:108.0pt;mso-add-space:auto;
text-indent:-18.0pt;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:Wingdings;mso-fareast-font-family:Wingdings;mso-bidi-font-family:
Wingdings'><span style='mso-list:Ignore'>Ø<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span></span><![endif]>FITSPhase2 input='&lt;csv file name&gt;'
output='&lt;name to save imputed file same as Phase1&gt;' k =&lt;<span
class=SpellE>topk</span> correlated matrix feature/sample value use for final
imputation&gt; feature=&lt;1/0 takes values either 1 or 0&gt; </p>

<p class=MsoNormal style='margin-left:72.0pt'><span >```</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Default value for
feature is zero. At value 0 phase2 will compute correlation among samples/cell
(<span class=SpellE>preffered</span>) while value 1 will compute correlation
features/sites wise.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><b><span >For large
read-count matrices<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >For imputing large
read-count matrices without <span class=SpellE>comsuming</span> too much memory
on computer use FITSPhase1L and FITSPhase2L<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Such that you run
FITSPhase1L many times ( atleast 5 times) before you finally call FITSPhase2L<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Run FITSPhase1L
many times before calling FITSPhase2L</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'> FITSPhase1L input</span>=unimputed.csv output=imputed.csv<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Then run
FITSPhase2L in same folder<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:36.0pt;text-indent:36.0pt'><span >$FITSPhase2<span
class=GramE>L input</span>=unimputed.csv  output=imputed.csv<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >As FITSPhase1L occupies
less RAM memory you could run multiple processes <span class=SpellE>parralely</span>
using <span class=SpellE>nohup</span></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'> nohup matlab -nodisplay -nosplash FITSPhase1L input='&lt;csv
file name&gt;’ output=’&lt;imputed.csv&gt;'
;  &gt; &lt;name&gt;.txt &amp;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >nohup matlab -nodisplay -nosplash -r  FITSPhase1L input='&lt;csv
file name&gt; ’ output=’&lt;imputed.csv&gt;'
; &gt; &lt;name&gt;.txt &amp;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >.....</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span class=SpellE><span >nohup</span></span><span
lang=EN> <span class=SpellE>matlab</span> -<span class=SpellE>nodisplay</span>
-<span class=SpellE>nosplash</span> -r &quot;try FITSPhase1L input='&lt;csv
file name&gt;<span class=GramE>’ output</span>=’&lt;imputed.csv&gt;'
; catch; end; quit&quot; &gt; &lt;name&gt;.txt &amp;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Then run
FITSPhase2L</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span class=SpellE><span >nohup</span></span><span
lang=EN> <span class=SpellE>matlab</span> -<span class=SpellE>nodisplay</span>
-<span class=SpellE>nosplash</span> -r &quot;try FITSPhase2L input='&lt;csv
file name&gt;<span class=GramE>’ output</span>=’&lt;imputed.csv&gt;'
; catch; end; quit&quot; &gt; &lt;name&gt;.txt &amp;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span class=GramE><b><span
lang=EN style='font-size:16.0pt;line-height:115%'>Using Python</span></b></span><b><span lang=EN
style='font-size:16.0pt;line-height:115%'> code <o:p></o:p></span></b></p>


<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><a id="python"><span >&quot;# FITS Python
version&quot; </a></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >One needs to have
python 3.0+ installed in their machine. You have to download python code in
your local machine/server. <a name="_Hlk14770003">For execution you have to
pass filename of read-counts csv as </a><span class=GramE><span
style='mso-bookmark:_Hlk14770003'>a</span></span><span style='mso-bookmark:
_Hlk14770003'> input file. Read-count csv file does not contain header and
genomic location i.e. it <span class=GramE>consist</span> of only data on which
imputation is going to perform. Row represents sites and column <span
class=SpellE>reprent</span> samples/cells in csv file.</span></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><a name="_Hlk14770115"><span
lang=EN>$</span></a><span > python3 FITSPhase1.py -<span class=SpellE>i</span>
&lt;csv file name&gt;</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >e.g.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$python3
FITSPhase1.py -<span class=SpellE>i</span> sce5_raw.csv</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >'sce5_raw.csv'
consist of <span class=SpellE>epignome</span> data corresponding to five cell
type.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Other optional
input parameter you can pass in phase1 </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$ python3
FITSPhase1.py -<span class=SpellE>i</span> &lt;csv file name&gt; -o &lt;name to
save imputed file&gt; -l &lt;Depth <span class=SpellE>upto</span> which tree
will grow&gt;</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Usage help can be
availed by following command</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$ python3
FITSPhase1.py -h</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >By default -l (<span
class=SpellE>maxLevel</span>) set to 4 and -o (output) set to 'FITS_OUTPUT'.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >You can run
FITSPhase1 <span class=SpellE>parallely</span> in background <span class=GramE>using
:</span> </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$ <span
class=SpellE>nohup</span> python3 FITSPhase1.py -<span class=SpellE>i</span>
&lt;csv file name&gt; &gt; &lt;name&gt;.txt &amp;</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >You can create n
number of imputed <span class=GramE>matrix</span> generated through phase1.
Each run will generate imputed matrix. Once Phase1 is over then run Phase2 to
generate final imputed matrix based on matrix received as output from Phase1.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$python3
FITSPhase2.py -<span class=SpellE>i</span> &lt;csv file name&gt;</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >e.g.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$python3
FITSPhase2.py -<span class=SpellE>i</span> sce5_raw.csv</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >You have to pass
same input file as you passed in Phase1. Don't worry Phase2 takes only one
minute to generate final output :)</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Other optional
input parameter you can pass in phase2 </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$python<span
class=GramE>3 FITSPhase2.py</span> -<span
class=SpellE>i</span> &lt;csv file name&gt; -o &lt;output&gt; -t &lt;<span
class=SpellE>topk</span> &gt; -c &lt;1/0 takes values either 1 or 0&gt; </span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Here <span
class=SpellE>topk</span> represents number of top correlated vectors to us to
build final matrix.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Default value for
feature is zero. At value 0 phase2 will compute correlation among samples/cell
(<span class=SpellE>preffered</span>) while value 1 will compute correlation
features/sites wise.</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Usage help can be
availed by following command</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >$ python3
FITSPhase2.py -h</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><b><span >For large
read-count matrices<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >For imputing large
read-count matrices without consuming too much memory on computer use
FITSPhase1L and FITSPhase2L<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Such that you run
FITSPhase1L many times (5 times) before you finally call FITSPhase2L<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span >Run FITSPhase1L
many times before <span class=GramE>calling FITSPhase</span>2L<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span > nohup python3 FITSPhase1.py -<span class=SpellE>i</span>
&lt;csv file name&gt; &gt; &lt;name&gt;.txt &amp;</span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span >Then run FITSPhase2L in same folder<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:36.0pt;text-indent:36.0pt'><span >$python3 FITSPhase2L.py input</span> -i unimputed.csv  -o imputed.csv<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:72.0pt'><span ><o:p>&nbsp;</o:p></span></p>


</div>

</body>

</html>
